#include "ClassNames.h"
#include HEADER_FILE(ARDUINO_CLASS)
#include "Duration.h"


const uint16_t NR_OF_DURATIONS = 256;

static const step_time_t durations[NR_OF_DURATIONS] PROGMEM = {
	// 0       1       2       3       4       5       6       7       8       9       
	0,      1,      2,      3,      4,      5,      6,      7,      8,      9, //    0 -  10
	10,     20,     30,     40,     50,     60,     70,     80,     90,    100, //   10 -  20
	120,    140,    160,    180,    200,    220,    240,    260,    280,    300, //   20 -  30
	320,    340,    360,    380,    400,    420,    440,    460,    480,    500, //   30 -  40   
	550,    600,    650,    700,    750,    800,    850,    900,    950,   1000, //   40 -  50
	1050,   1100,   1150,   1200,   1250,   1300,   1350,   1400,   1450,   1500, //   50 -  60
	1550,   1600,   1650,   1700,   1750,   1800,   1850,   1900,   1950,   2000, //   60 -  70
	2050,   2100,   2150,   2200,   2250,   2300,   2350,   2400,   2450,   2500, //   70 -  80
	2550,   2600,   2650,   2700,   2750,   2800,   2850,   2900,   2950,   3000, //   80 -  90
	3050,   3100,   3150,   3200,   3250,   3300,   3350,   3400,   3450,   3500, //   90 - 100
	3550,   3600,   3650,   3700,   3750,   3800,   3850,   3900,   3950,   4000, //  100 - 110
	4050,   4100,   4150,   4200,   4250,   4300,   4350,   4400,   4450,   4500, //  110 - 120
	4550,   4600,   4650,   4700,   4750,   4800,   4850,   4900,   4950,   5000, //  120 - 130
	5100,   5200,   5300,   5400,   5500,   5600,   5700,   5800,   5900,   6000, //  130 - 140
	6100,   6200,   6300,   6400,   6500,   6600,   6700,   6800,   6900,   7000, //  140 - 150
	7100,   7200,   7300,   7400,   7500,   7600,   7700,   7800,   7900,   8000, //  150 - 160
	8100,   8200,   8300,   8400,   8500,   8600,   8700,   8800,   8900,   9000, //  160 - 170
	9100,   9200,   9300,   9400,   9500,   9600,   9700,   9800,   9900,  10000, //  170 - 180
	10500,  11000,  11500,  12000,  12500,  13000,  13500,  14000,  14500,  15000, //  180 - 190 
	15500,  16000,  16500,  17000,  17500,  18000,  18500,  19000,  19500,  20000, //  190 - 200
	20500,  21000,  21500,  22000,  22500,  23000,  23500,  24000,  24500,  25000, //  200 - 210
	25500,  26000,  26500,  27000,  27500,  28000,  28500,  29000,  29500,  30000, //  210 - 220
	31000,  32000,  33000,  34000,  35000,  36000,  37000,  38000,  39000,  40000, //  220 - 230
	41000,  42000,  43000,  44000,  45000,  46000,  47000,  48000,  49000,  50000, //  230 - 240
	55000,  60000,  65000,  70000,  75000,  80000,  85000,  90000,  95000, 100000, //  240 - 250
	125000, 150000, 175000, 200000, 225000, 250000 };                               //  250 - 255


Duration::Duration()
{

}


Duration::~Duration()
{
}


/* 
 * This function is not called on MCU.
 * IMPR: Binary search instead of loop.
 */
/*static */ step_duration_t Duration::ToStepDuration(step_time_t stepTime)
{
	for (step_duration_t index = 0; index < NR_OF_DURATIONS - 1; index++)
	{
		if (stepTime == durations[index])
		{
			return index;
		}
		else if (stepTime > durations[index])
		{
			if (stepTime - durations[index] < durations[index + 1] - stepTime)
			{
				return index;
			}
			else
			{
				return index + 1;
			}
		}
	}

	return NR_OF_DURATIONS - 1;
};


/* static */ step_time_t Duration::ToStepTime(step_duration_t duration)
{
	return durations[duration];
}
